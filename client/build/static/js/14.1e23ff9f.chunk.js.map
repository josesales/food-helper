{"version":3,"file":"static/js/14.1e23ff9f.chunk.js","mappings":"yQAWA,MAqEMA,GAAkBC,EAAAA,EAAAA,IAAyB,CAC7CC,YAAaC,EAAAA,KASjB,GAAeC,EAAAA,EAAAA,IAAQJ,GANIK,IAAQ,CAC/BC,eAAgBC,GAAQF,GAASC,EAAAA,EAAAA,IAAeC,IAChDC,SAAUC,GAASJ,GAASG,EAAAA,EAAAA,IAASC,IACrCC,eAAgBC,GAAUN,GAASK,EAAAA,EAAAA,GAAeC,OAGtD,EA/EcC,IAAgE,IAA/D,YAAEV,EAAW,eAAEI,EAAc,SAAEE,EAAQ,eAAEE,GAAgBE,EAEpE,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,CAAEC,MAAO,GAAIC,SAAU,MAEhE,KAAEC,EAAI,QAAEC,IAAYC,EAAAA,EAAAA,KAAYC,GAASA,EAAMF,UAc/CG,EAAeC,IACjB,MAAM,MAAEC,EAAK,KAAEC,GAASF,EAAMG,OAE9BZ,GAAca,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAId,GAAW,IAAE,CAACY,GAAOD,IAAQ,EAGrD,OACII,EAAAA,EAAAA,KAACC,EAAAA,SAAc,CAAAC,SAEP5B,GAAc0B,EAAAA,EAAAA,KAACG,EAAAA,GAAQ,CAACC,GAAG,OAE3BC,EAAAA,EAAAA,MAACJ,EAAAA,SAAc,CAAAC,SAAA,CAGPZ,GAAQC,GAAUS,EAAAA,EAAAA,KAACM,EAAAA,EAAc,CAAChB,KAAMA,EAAMC,QAASA,IAAc,MAGzEc,EAAAA,EAAAA,MAAA,OAAKE,UAAU,QAAOL,SAAA,EAElBF,EAAAA,EAAAA,KAAA,OAAKO,UAAU,gBAAeL,UAC1BF,EAAAA,EAAAA,KAAA,MAAIO,UAAU,+BAA8BL,SAAC,aAGjDG,EAAAA,EAAAA,MAAA,OAAKE,UAAU,mBAAkBL,SAAA,EAE7BF,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAAAN,UACPF,EAAAA,EAAAA,KAAA,SAAOO,UAAU,eAAejB,KAAK,QAAQO,KAAK,QAAQY,GAAG,cAAcC,YAAY,QAAQC,UAAQ,EAACf,MAAOX,EAAYG,MACvHwB,SAAUlB,OAGlBM,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAAAN,UACPF,EAAAA,EAAAA,KAAA,SAAOO,UAAU,eAAejB,KAAK,WAAWO,KAAK,WAAWY,GAAG,iBAAiBC,YAAY,WAAWC,UAAQ,EAACf,MAAOX,EAAYI,SACnIuB,SAAUlB,UAItBW,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0BAAyBL,SAAA,EAEpCF,EAAAA,EAAAA,KAAA,UAAQa,QAlDXC,UAEjB,IACI,MAAM,KAAEnC,EAAI,MAAEE,SAAgBkC,EAAAA,EAAAA,IAAU,eAAgB,OAAQ9B,GAChEP,EAAeC,GACfC,EAASC,EACb,CAAE,MAAOmC,GACLC,OAAOC,SAAS,EAAG,GACnBpC,EAAe,CAACQ,KAAK,QAASC,QAASyB,EAAMzB,SACjD,GAyCkDW,SAAC,WAE/BF,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACZ,UAAU,mCAAmCH,GAAG,UAASF,SAAC,6BAOnE,G","sources":["pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport InputField from '../components/ui/InputField';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { postPatch } from '../util/request-sender';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { setCurrentUser, setToken } from '../redux/user/user-actions';\r\nimport { selectCurrentUser } from '../redux/user/user-selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { displayMessage } from '../redux/message/message-actions';\r\nimport DisplayMessage from '../components/ui/DisplayMessage';\r\n\r\nconst Login = ({ currentUser, setCurrentUser, setToken, displayMessage }) => {\r\n\r\n    const [credentials, setCredentials] = useState({ email: '', password: '' });\r\n\r\n    const { type, message } = useSelector(state => state.message);\r\n\r\n    const onLoginClick = async event => {\r\n\r\n        try {\r\n            const { user, token } = await postPatch('/users/login', 'POST', credentials);\r\n            setCurrentUser(user);\r\n            setToken(token);\r\n        } catch (error) {\r\n            window.scrollTo(0, 0);\r\n            displayMessage({type:'error', message: error.message});\r\n        }\r\n    };\r\n\r\n    const onUserChange = event => {\r\n        const { value, name } = event.target;\r\n\r\n        setCredentials({ ...credentials, [name]: value });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                currentUser ? <Redirect to=\"/\" /> :\r\n\r\n                <React.Fragment>\r\n\r\n                    {\r\n                        type && message ? <DisplayMessage type={type} message={message} /> : null\r\n                    }\r\n\r\n                    <div className='login'>\r\n\r\n                        <div className=\"login__title \">\r\n                            <h2 className=\"heading-primary title-margin\">Login</h2>\r\n                        </div>\r\n\r\n                        <div className=\"login__container\">\r\n\r\n                            <InputField>\r\n                                <input className=\"input-margin\" type=\"email\" name=\"email\" id=\"login-email\" placeholder=\"Email\" required value={credentials.email}\r\n                                    onChange={onUserChange} />\r\n                            </InputField>\r\n\r\n                            <InputField>\r\n                                <input className=\"input-margin\" type=\"password\" name=\"password\" id=\"login-password\" placeholder=\"Password\" required value={credentials.password}\r\n                                    onChange={onUserChange} />\r\n                            </InputField>\r\n                        </div>\r\n\r\n                        <div className=\"login__button-container\">\r\n\r\n                            <button onClick={onLoginClick}>Login</button>\r\n\r\n                            <Link className=\"login__button-container--sign-up\" to='/signUp'>\r\n                                Create Account\r\n                </Link>\r\n                        </div>\r\n                    </div>\r\n                    </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: selectCurrentUser\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setCurrentUser: user => dispatch(setCurrentUser(user)),\r\n    setToken: token => dispatch(setToken(token)),\r\n    displayMessage: msgObj => dispatch(displayMessage(msgObj)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"],"names":["mapStateToProps","createStructuredSelector","currentUser","selectCurrentUser","connect","dispatch","setCurrentUser","user","setToken","token","displayMessage","msgObj","_ref","credentials","setCredentials","useState","email","password","type","message","useSelector","state","onUserChange","event","value","name","target","_objectSpread","_jsx","React","children","Redirect","to","_jsxs","DisplayMessage","className","InputField","id","placeholder","required","onChange","onClick","async","postPatch","error","window","scrollTo","Link"],"sourceRoot":""}