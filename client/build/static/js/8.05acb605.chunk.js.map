{"version":3,"sources":["pages/Login.jsx"],"names":["mapStateToProps","createStructuredSelector","currentUser","selectCurrentUser","connect","dispatch","setCurrentUser","user","setToken","token","useState","email","password","credentials","setCredentials","onLoginClick","event","a","postPatch","alert","message","onUserChange","target","value","name","Fragment","to","className","type","id","placeholder","required","onChange","onClick"],"mappings":"8PAoEMA,EAAkBC,YAAyB,CAC7CC,YAAaC,MAQFC,sBAAQJ,GALI,SAAAK,GAAQ,MAAK,CACpCC,eAAgB,SAAAC,GAAI,OAAIF,EAASC,YAAeC,KAChDC,SAAU,SAAAC,GAAK,OAAIJ,EAASG,YAASC,QAG1BL,EApED,SAAC,GAA+C,IAA7CF,EAA4C,EAA5CA,YAAaI,EAA+B,EAA/BA,eAAgBE,EAAe,EAAfA,SAE1C,EAAsCE,mBAAS,CAAEC,MAAO,GAAIC,SAAU,KAAtE,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAY,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,+EAGiBC,YAAU,eAAgB,OAAQL,GAHnD,gBAGLN,EAHK,EAGLA,KAAME,EAHD,EAGCA,MACdH,EAAeC,GACfC,EAASC,GALI,kDAObU,MAAM,KAAMC,SAPC,0DAAH,sDAWZC,EAAe,SAAAL,GACjB,MAAwBA,EAAMM,OAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAEfV,EAAe,2BAAKD,GAAN,kBAAoBW,EAAOD,MAG7C,OACI,cAAC,IAAME,SAAP,UAEQvB,EAAc,cAAC,IAAD,CAAUwB,GAAG,MAEvB,sBAAKC,UAAU,QAAf,UAEI,qBAAKA,UAAU,eAAf,SACI,oBAAIA,UAAU,kBAAd,qBAGJ,sBAAKA,UAAU,mBAAf,UAEI,cAAC,IAAD,UACI,uBAAOC,KAAK,QAAQJ,KAAK,QAAQK,GAAG,cAAcC,YAAY,QAAQC,UAAQ,EAACR,MAAOV,EAAYF,MAC9FqB,SAAUX,MAGlB,cAAC,IAAD,UACI,uBAAOO,KAAK,WAAWJ,KAAK,WAAWK,GAAG,iBAAiBC,YAAY,WAAWC,UAAQ,EAACR,MAAOV,EAAYD,SAC1GoB,SAAUX,SAItB,sBAAKM,UAAU,0BAAf,UAEI,wBAAQM,QAASlB,EAAjB,mBAEA,cAAC,IAAD,CAAMY,UAAU,mCAAmCD,GAAG,UAAtD","file":"static/js/8.05acb605.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport InputField from '../components/ui/InputField';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { postPatch } from '../util/request-sender';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentUser, setToken } from '../redux/user/user-actions';\r\nimport { selectCurrentUser } from '../redux/user/user-selector';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nconst Login = ({ currentUser, setCurrentUser, setToken }) => {\r\n\r\n    const [credentials, setCredentials] = useState({ email: '', password: '' });\r\n\r\n    const onLoginClick = async event => {\r\n\r\n        try {\r\n            const { user, token } = await postPatch('/users/login', 'POST', credentials);\r\n            setCurrentUser(user);\r\n            setToken(token);\r\n        } catch (error) {\r\n            alert(error.message);\r\n        }\r\n    };\r\n\r\n    const onUserChange = event => {\r\n        const { value, name } = event.target;\r\n\r\n        setCredentials({ ...credentials, [name]: value });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                currentUser ? <Redirect to=\"/\" /> :\r\n\r\n                    <div className='login'>\r\n\r\n                        <div className=\"login__title\">\r\n                            <h2 className=\"heading-primary\">Login</h2>\r\n                        </div>\r\n\r\n                        <div className=\"login__container\">\r\n\r\n                            <InputField>\r\n                                <input type=\"email\" name=\"email\" id=\"login-email\" placeholder=\"Email\" required value={credentials.email}\r\n                                    onChange={onUserChange} />\r\n                            </InputField>\r\n\r\n                            <InputField>\r\n                                <input type=\"password\" name=\"password\" id=\"login-password\" placeholder=\"Password\" required value={credentials.password}\r\n                                    onChange={onUserChange} />\r\n                            </InputField>\r\n                        </div>\r\n\r\n                        <div className=\"login__button-container\">\r\n\r\n                            <button onClick={onLoginClick}>Login</button>\r\n\r\n                            <Link className=\"login__button-container--sign-up\" to='/signUp'>\r\n                                Create Account\r\n                </Link>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: selectCurrentUser\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setCurrentUser: user => dispatch(setCurrentUser(user)),\r\n    setToken: token => dispatch(setToken(token)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"],"sourceRoot":""}